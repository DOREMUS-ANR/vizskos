// Generated by CoffeeScript 1.7.1
'use strict';
var anymatch, minimatch;

minimatch = require('minimatch');

anymatch = function(criteria, string, returnIndex, startIndex, endIndex) {
  var matchIndex, matched;
  if (startIndex == null) {
    startIndex = 0;
  }
  if (!Array.isArray(criteria)) {
    criteria = [criteria];
  }
  matchIndex = -1;
  matched = criteria.slice(startIndex, endIndex).some(function(criterion, index) {
    var result;
    result = (function() {
      switch (toString.call(criterion)) {
        case '[object String]':
          return string === criterion || minimatch(string, criterion);
        case '[object RegExp]':
          return criterion.test(string);
        case '[object Function]':
          return criterion(string);
        default:
          return false;
      }
    })();
    if (result) {
      matchIndex = index + startIndex;
    }
    return result;
  });
  if (returnIndex === true) {
    return matchIndex;
  } else {
    return matched;
  }
};

anymatch.matcher = function(criteria) {
  return anymatch.bind(null, criteria);
};

module.exports = anymatch;
