{"version":3,"sources":["app/initialize.js","app/js/application.js","app/js/models/concept.js","app/js/models/thesaurus.js","app/js/routers/router.js","app/js/views/app.js","app/js/views/concept.js","app/js/views/nav.js","app/js/views/navCircle.js","app/js/views/navTree.js","app/js/views/selectNav.js","app/js/views/templates/concept.hbs","app/js/views/templates/helpers.js","app/js/views/templates/main.hbs","app/js/views/templates/selectNav.hbs","app/js/views/view.js"],"names":[],"mappingsxhVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACtvrJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACpDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;CCXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;CC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"public/javascripts/app.js","sourcesContent":["var application = require('./js/application');\n\n$(function() {\n\n  \tapplication.initialize();\n  \tBackbone.history.start({ pushState: true });\n  \t\n});","var Application = {\n  domainPattern : /http:\\/\\/[\\w\\.]*\\//g,\n  initialize: function initializeApplication() {\n   \n  \tvar AppView = require('./views/app');\n  \tvar Router = require('./routers/router');\n  \tvar Thesaurus = require('./models/thesaurus');\n    \n      this.collection = new Thesaurus();\n      this.appView = new AppView({collection : this.collection, attributes : { application: this }}).render();\n      this.router = new Router({collection : this.collection, attributes : { application: this }});\n  \n  },\n  processUri : function processUriApplication(uri){\n    //if the beginning of the uri is the same as the location    \n    if(uri.search(location.origin) !== -1){\n      return uri.replace(location.origin, \"\");\n    }else if(uri.search(\"uri=http\") === -1){\n      return uri.replace(\"http\", \"uri=http\");\n    }else{\n      return uri;\n    }\n  \t/*if(uri.search(this.domainPattern) != -1){\n  \t\treturn uri.replace(this.domainPattern, '');\n  \t}else{\n  \t\treturn uri;\n  \t}*/\n  }\n};\n\nmodule.exports = Application;","module.exports = Backbone.Model.extend({\n\n  // Default\n  defaults: {\n    concept : true\n  },\n  initialize: function initializeConcept(){\n    //console.log(\"bonjour\", this.attributes);\n  \tthis.set('uri', this.attributes[\"@id\"]);\n  \tvar urlParts = this.attributes[\"@id\"].split(\"/\").join(\"\");\n    this.set('id', urlParts.substring((urlParts.length -10), urlParts.length));\n    this.set('type', this.attributes[\"@type\"]);\n\n    if(this.attributes[\"skos:inScheme\"]){\n      this.set('conceptScheme', this.attributes[\"skos:inScheme\"]);\n    }else if(this.attributes[\"skos:topConceptOf\"]){\n      this.set('conceptScheme', this.attributes[\"skos:topConceptOf\"]);\n    }\n    \n    var scheme = this.collection.getThesaurusName(this.get('conceptScheme'), this.attributes[\"@id\"]);\n    this.set('conceptSchemeName', scheme.name);\n    this.set('conceptSchemeClass', scheme.class);\n    \n    if(this.attributes[\"skos:altLabel\"]){\n      this.set('altLabel', Array.isArray(this.attributes[\"skos:altLabel\"]) ? _.sortBy(this.attributes[\"skos:altLabel\"], this.sortByLanguage) : [this.attributes[\"skos:altLabel\"]] );\n    }\n    if(this.attributes[\"skos:prefLabel\"]){\n      this.set('prefLabel', Array.isArray(this.attributes[\"skos:prefLabel\"])? _.sortBy(this.attributes[\"skos:prefLabel\"], this.sortByLanguage) : [this.attributes[\"skos:prefLabel\"]] );\n    }\n    if(this.attributes[\"skos:hasTopConcept\"]){\n      if(Array.isArray(this.attributes[\"skos:hasTopConcept\"])){\n        this.set('hasTopConcept', this.attributes[\"skos:hasTopConcept\"].map(function(elt){ return elt[\"@id\"];}));\n      }else{\n        this.set('hasTopConcept', this.attributes[\"skos:hasTopConcept\"][\"@id\"]);\n      }\n    }\n    if(this.attributes[\"skos:narrower\"]){\n      this.set('narrower', Array.isArray(this.attributes[\"skos:narrower\"])? this.attributes[\"skos:narrower\"] : [this.attributes[\"skos:narrower\"]]);\n    }\n    if(this.attributes[\"skos:exactMatch\"]){\n      this.set('exactMatch', Array.isArray(this.attributes[\"skos:exactMatch\"]) ? this.attributes[\"skos:exactMatch\"] : [this.attributes[\"skos:exactMatch\"]]);\n    }\n    if(this.attributes[\"skos:closeMatch\"] ){\n      this.set('closeMatch', Array.isArray(this.attributes[\"skos:closeMatch\"]) ? this.attributes[\"skos:closeMatch\"] : [this.attributes[\"skos:closeMatch\"]]);\n    }\n    //this.setPrefLabels();\n    //console.log(\"on teste\", this.getNamedRelatedConcepts(this.attributes[\"skos:narrower\"]));\n  },\n  getNamedRelatedConcepts: function getNamedRelatedConcepts(concept) {\n    if(!Array.isArray(concept)) concept = [concept];\n    return concept.map(function(elt){\n      var conceptinfos = _.findWhere(this.collection, {'@id' : elt});\n      //return conceptinfos.prefLabel[\"pivot\"];\n    })\n  },\n  formatLabel: function formatLabelConcept(elt){\n    if(typeof elt === \"string\") {\n      return {\"@language\" : pivot, \"@value\" : elt};\n    }else{\n      return elt;\n    }\n  },\n  setPrefLabels: function setPrefLabelsConcept() {\n    var prefLabel = {};\n    var that = this;\n    var labels = [];\n    if(Array.isArray(this.attributes[\"skos:prefLabel\"])){\n      labels = this.attributes[\"skos:prefLabel\"] ;\n    }else{\n      labels.push(this.attributes[\"skos:prefLabel\"]);\n    }\n    if(labels){\n      labels.forEach(function(elt, index){\n        var label = that.formatLabel(elt);\n        prefLabel[label[\"@language\"]] = label[\"@value\"];\n      });\n      this.set('prefLabels', prefLabel);\n    }\n    console.log(\"yes\", this, prefLabel);\n  },\n  getRelative: function getRelativeConcept(direction) {\n    return this.collection.at(this.collection.indexOf(this) + direction);\n  },\n  sortByLanguage : function sortByLanguageConcept(elt){\n    if(elt[\"@language\"]){\n      switch(elt[\"@language\"]){\n        case \"ca\" :\n          return 1;\n        case \"de\" :\n          return 2;\n        case \"en\" :\n          return 3;\n        case \"fr\" :\n          return 4;\n        case \"it\" :\n          return 5;\n        case \"nl\" :\n          return 6;\n        case \"sv\" :\n          return 7;\n      }\n    }\n    return 0;\n  }\n});","var jsonld = require('jsonld');\nvar concept = require('./concept');\nvar application = require('../application');\nmodule.exports = Backbone.Collection.extend({\n  \n  model: concept,\n  loaded: false,\n  activeURI : null,\n  activeThesaurus : null,\n  thesaurusNames : {'InstrumentsKeywords' : 'MIMO Thesaurus', 'hs': 'Sachs & Hornbostel classification'},\n  url: 'http://localhost:9091/',\n  thesauri : [\n    {'id' : 'http://www.mimo-db.eu/InstrumentsKeywords', 'pattern' : 'http://www.mimo-db.eu/InstrumentsKeywords', 'endpoint' : 'http://data.mimo-db.eu:9091/sparql/describe?uri=', 'data': 'http://www.mimo-db.eu/data/InstrumentsKeywords.json', 'base': 'http://www.mimo-db.eu/', 'name' : 'MIMO Thesaurus'},\n    {'id' : 'http://www.mimo-db.eu/HornbostelAndSachs', 'pattern' : 'http://www.mimo-db.eu/HornbostelAndSachs', 'endpoint' : 'http://data.mimo-db.eu:9091/sparql/describe?uri=', 'data': 'http://www.mimo-db.eu/data/HornbostelAndSachs.json', 'base': 'http://www.mimo-db.eu/', 'name': 'Sachs & Hornbostel classification'}\n  ],\n  viewTypes : [{ 'id' : 1, 'name' : 'circular tree'},{ 'id' : 2, 'name' : 'tree'}],\n  //viewType :  1,\n  conceptClosed : false,\n  context : {\n    \"skos\": \"http://www.w3.org/2004/02/skos/core#\",\n    \"skos:Concept\": {\"@type\": \"@id\"},\n    \"skos:inScheme\": {\"@type\": \"@id\"},\n    \"skos:narrower\": {\"@type\": \"@id\"},\n    \"skos:exactMatch\": {\"@type\": \"@id\"},\n    \"skos:broader\": {\"@type\": \"@id\"},\n    \"skos:closeMatch\": {\"@type\": \"@id\"},\n    \"skos:topConceptOf\": {\"@type\": \"@id\"}\n  },\n\n  initialize : function(models, options){\n\n    if(!this.loaded && this.activeThesaurus){\n      //this.loadData();\n    }\n \n  },\n\n  getActiveConcept : function getActiveConceptThesaurus(){\n    \n    var theconcept = this.models.filter(function(element){\n      return element.attributes.uri === this.activeURI;\n    }.bind(this));\n\n    //console.log(\"oh ?\", this.activeURI, theconcept[0]);\n    return theconcept[0] || null;\n  },\n  getActiveThesaurus : function getActiveThesaurus(){\n    var theconcept = _.findWhere(this.models, {'@type' : 'ConceptScheme'});\n    if(theconcept === undefined){\n      theconcept = {\n        \"conceptScheme\" : this.activeThesaurus.id,\n        \"type\" : \"skos:ConceptScheme\",\n        \"prefLabel\" : [this.activeThesaurus.name]\n      }\n    }\n    return theconcept;\n  },\n  getViewTypes : function getViewTypesThesaurus(){\n    var viewType = this.getViewType();\n    this.viewTypes.forEach(function (element, index) {\n      if(element.id === viewType) {\n        this.selected = true;\n      }else{\n        this.selected = false;\n      }\n    });\n    return this.viewTypes;\n  },\n  setViewType : function setViewTypeThesaurus(type){\n    sessionStorage.setItem(\"viewType\", type);\n    this.trigger(\"viewTypeChanged\", this);\n  },\n  getViewType : function getViewTypeThesaurus(){\n    var viewType = Number(sessionStorage.getItem(\"viewType\")) || 1;\n    return viewType;\n\n  },\n\n  getThesaurusName : function getThesaurusName(thesaurusUri, conceptUri){\n    return this.activeThesaurus.name;\n  },\n  matchAnyThesaurus : function matchAnyThesaurus(uri){\n    for(var i = 0; i< this.thesauri.length; i++){\n      var thesaurus = this.thesauri[i];\n      if(this.matchPatternThesaurus(thesaurus.pattern, uri)) return true;\n    }\n    return false;\n  },\n  matchPatternThesaurus : function matchPatternThesaurus(pattern, uri){\n     var myRegExp = new RegExp(\"^\" + pattern + \"([\\\\w\\\\/\\\\.]*)\", \"g\");\n     return (uri.match(myRegExp) !== null)? true: false;\n  },\n  setActiveURI : function setActiveURIThesaurus(uri){\n    \n    if(uri.search(\"http\") === -1) uri = location.origin + \"/\" + uri;\n    \n    var isFullThesaurus;\n    var whichThesaurus = this.thesauri.filter(function(element){\n      var myRegExp = new RegExp(\"^\" + element.pattern + \"([\\\\w\\\\/\\\\.]*)\", \"g\");\n      if (element.id === uri) {\n        isFullThesaurus = true;\n        return element;\n      }else if(this.matchPatternThesaurus(element.pattern, uri)){\n        return element;\n      }\n    }.bind(this));\n    if(whichThesaurus.length>0){\n      if(isFullThesaurus){\n        //is uri one of the thesauri ? load it !\n        this.activeURI = uri;\n        if(this.activeThesaurus === null || this.activeThesaurus.id !== whichThesaurus[0].id){\n          this.activeThesaurus = whichThesaurus[0];\n          this.loadThesaurus(whichThesaurus[0]);\n        }else{\n          this.trigger(\"conceptChanged\", this);\n        }\n      }else{\n        //console.log(\"??\", whichThesaurus.endpoint + uri);\n        //else : if URI uses same pattern as one thesaurus => look for it in the associated SPARQL endpoints       \n        this.loadURI(uri, whichThesaurus[0]);\n      }\n    }else{\n      this.activeThesaurus = this.thesauri[0];\n      this.loadThesaurus(this.thesauri[0]);\n    }\n    //else : search all SPARQL endpoints ?\n    \n  },\n  loadURI : function loadURIThesaurus(uri, thesaurus){\n    //if(){\n    //console.log(\"on y go\", uri, thesaurus);\n    if(uri != this.activeURI){\n      this.activeURI = uri;\n      this.trigger(\"conceptChanged\", this);\n\n      if(this.activeThesaurus === null || this.activeThesaurus.id !== thesaurus.id){\n        //this.reset();\n        this.activeThesaurus = thesaurus;\n        $.ajax({\n          'url': thesaurus.endpoint + uri,\n          'headers': {'Accept' : 'application/ld+json'},\n          'dataType': 'json',\n          'context': this\n        }).done(function(collection){\n          collection = _.where(collection, {'@id': uri});\n          //console.log(\"collection filtrée \", collection);\n          jsonld.compact(collection, this.context, function(err, compacted) {\n       \n            this.prepareData([compacted]);\n            this.trigger(\"conceptChanged\", this);\n            this.loadThesaurus(thesaurus);\n          }.bind(this));\n        }).fail(function(error){\n          this.loadThesaurus(thesaurus);\n        });\n      }\n    }\n  },\n  loadThesaurus : function loadThesaurus(thesaurus){\n\n    var loadingCompleted  = function (collection){\n      //console.log(\"collection\", collection);\n      jsonld.compact(collection, this.context, function(err, compacted) { \n        //reset the collection\n        //console.log(\"compacted\",compacted);\n        this.prepareData(compacted[\"@graph\"]);\n        this.loaded = true;\n        this.trigger(\"navChanged\", this);\n        this.trigger(\"conceptChanged\", this);\n      }.bind(this));\n\n    }\n    this.loaded = false;\n    $.ajax({  \n      'url': thesaurus.endpoint + thesaurus.id ,\n      'headers': {'Accept' : 'application/ld+json'},\n      'context': this,\n      'dataType': 'json',\n      'crossDomain' : true\n    })\n    .done(loadingCompleted)\n    .fail(function(error){\n      //console.log(\"essai n°3\", thesaurus.data)\n      $.ajax({\n        'url': thesaurus.data ,\n        'context': this,\n        'dataType': 'json',\n        'crossDomain' : true\n      }).done(loadingCompleted)\n      .fail(function(error){\n        console.log(error);\n      })\n    });\n    \n  },\n  \n  \n  getName : function getName (prefLabels){\n    \n    if(!prefLabels) return \"\";\n    if(Array.isArray(prefLabels)){\n      var name = prefLabels.filter(function(prefLabel){\n        return typeof prefLabel === \"string\";\n      });\n      if(Array.isArray(name)){\n        name = name[0];\n      }else{\n        name = prefLabels[0][\"@value\"];\n      }\n    }else if(prefLabels[\"@value\"]){\n      var name = prefLabels[\"@value\"];\n    }else{\n      var name = prefLabels;\n    }\n    return name;\n\n  },\n  getChildren : function getChildren(node){\n    \n    var that = this;\n    return this.models.filter(function (element){\n      return element.attributes[\"skos:broader\"] === node[\"@id\"];\n\n    }).map(function (childElement){\n      var name = that.getName(childElement.attributes[\"skos:prefLabel\"]);\n      var children = that.getChildren(childElement.attributes);\n      var result = {\"name\" : name, uri : childElement.attributes[\"@id\"], id : childElement.attributes[\"id\"]};\n      if(children.length > 0) {\n        result.children = children;\n        result.size = children.length;\n      }else{ \n        result.size = 1;\n      }\n      return result;\n    });\n\n  },\n  getParent : function getParentThesaurus(nodeId, data){\n    \n    var that = this;\n\n    var element = data.filter(function (element){\n      return element[\"@id\"] === nodeId;\n    });\n    var parent = new Array();\n\n    if(element.parents){\n      return element.parents;\n    }else if(element[\"skos:broader\"]) {\n      var grandParent =  that.getParent(element[\"skos:broader\"], data);\n\n      if(grandParent.length>0){\n        parent = grandParent;\n      }\n      \n      parent = parent.concat([element[\"skos:broader\"]]);\n    }\n    return parent;      \n    \n  },\n  toggleConcept : function toggleConceptThesaurus(visible){\n    if(visible){\n      if(visible === true){\n        this.conceptClosed = false;\n      }else{\n        this.conceptClosed = true;\n      }\n    }else{\n      this.conceptClosed = !this.conceptClosed;\n    }\n    this.trigger(\"conceptToggled\");\n\n  },\n  findRank : function findRankThesaurus (dataObj){\n    \n    if(!dataObj) return false;\n    for(var element in dataObj) {\n      var themodel = _.findWhere(this.models, function(elt){\n        elt.attributes[\"@id\"] == element[\"@id\"];\n      });\n      themodel.set(\"rank\", this.counter);\n      this.counter ++;\n      if (element.children) this.findRank(element.children);\n    };\n\n  },\n  comparator : function comparatorThesaurus (model) {\n    return model.get('rank');\n  },\n  prepareData: function prepareDataThesaurus(data){\n    var that = this;\n\n    //add parent hierarchy\n    var data = data.map(function(element){\n      var parent = that.getParent(element[\"@id\"], data);\n      if(parent.length>0){\n        element.parents = parent;\n      }\n      return element;\n    });\n\n    if(this.models.length>1){\n      this.reset(data);\n    }else{\n      this.add(data);\n    }\n    \n    //creates hierarchical tree for nav\n    var filteredTree = this.models.filter(function(element){\n      return element.attributes[\"skos:topConceptOf\"] !== undefined;\n    }).map(function (element){\n      var children = that.getChildren(element.attributes);\n      var result = { \"name\" : that.getName(element.attributes[\"skos:prefLabel\"]), uri : element.attributes[\"@id\"], id : element.attributes[\"id\"]};\n      if(children.length > 0) {\n        result.children = children;\n        result.size = children.length;\n      }else{\n        result.size = 1;\n      }\n      return result;\n    });\n\n    var dataTree = {\"name\" : this.activeThesaurus.name };\n    dataTree.children = filteredTree;\n    \n    this.counter = 1;\n    \n    //orders the collection according to the tree\n    this.findRank(dataTree);\n    this.sort();\n    //console.log(dataTree);\n    this.conceptTree = dataTree;\n    this.trigger(\"dataChanged\");\n\n  }\n\n});","var application = require('../application');\nmodule.exports = Backbone.Router.extend({\n    routes:{\n      \"about\" : \"showAbout\",\n      \"*other\"    : \"defaultRoute\"\n    },\n    \n    showAbout: function showAbout( ) {\n      // Set the current filter to be used\n      //console.log(\"On aimerait afficher les infos \");\n    },\n\n    defaultRoute: function(other){\n      //console.log('You attempted to reach:' + other);\n      if(!other) other = \"\";\n      other = other.replace(\"uri=\", \"\");\n      application.collection.setActiveURI(other);\n      Backbone.history.checkUrl();\n    }\n\n});","var View = require('./view');\nvar ConceptView = require('./concept');\nvar NavView = require('./nav');\nvar SelectNavView = require('./selectNav');\n\nvar _ = require('underscore');\n\nmodule.exports = View.extend({\n    \n    el: '#vizskos',\n    template : require('./templates/main.hbs'),\n\n    afterRender: function afterRenderApp() {\n     \n      this.conceptView = new ConceptView({collection : this.collection, el: this.$('article')});\n      this.navView = new NavView({collection : this.collection, el: this.$('nav.nav')});\n      this.selectNavView = new SelectNavView({collection : this.collection, el: this.$('.tools') });\n\n\n    }\n});","var View = require('./view');\nvar application = require('../application');\nrequire('./templates/helpers.js');\n\nmodule.exports = View.extend({\n\n    events: {\n      'click .close': 'close',\n      'click .link': 'activateLink',\n      'click .next': 'next',\n      'click .prev': 'prev'\n    },\n    \n    template : require('./templates/concept.hbs'),\n    \n    // The ConceptView listens for changes to its model, re-rendering. \n    // Since there's only one **Concept** displayed in detail \n\n    afterInit: function afterInitConcept(){\n      this.listenTo(this.collection, 'conceptChanged', this.render);\n      this.listenTo(this.collection, 'conceptToggled', this.conceptToggled);\n    },\n    getRenderData: function getConceptRenderData(){\n      this.model = this.collection.getActiveConcept();\n      //console.log(\"le modele\",themodel.attributes);\n      return this.model ? $.extend({ language :'en' }, this.model.attributes) : this.collection.getActiveThesaurus();\n    },\n    // Close the concept section\n    close: function closeConcept(element) {\n      this.collection.toggleConcept();\n      element.preventDefault();\n    },\n    next: function nextConcept(element) {\n      var newmodel = this.model.getRelative(1);\n      application.router.navigate(application.processUri(newmodel.attributes[\"@id\"]), {trigger : true});\n      element.preventDefault();\n    },\n    prev: function prevConcept(element) {\n      var newmodel = this.model.getRelative(-1);\n      application.router.navigate(application.processUri(newmodel.attributes[\"@id\"]), {trigger : true});\n      element.preventDefault();\n    },\n    conceptToggled: function conceptToggledConcept(element) {\n      if(this.collection.conceptClosed && this.collection.activeURI){\n        this.$el.addClass(\"closed\");\n      }else{\n        this.$el.removeClass(\"closed\");\n      }\n    },\n    // Open / reduce the concept section\n    activateLink: function activateLinkConcept(element) {\n      application.router.navigate(application.processUri($(element.currentTarget).attr(\"href\")), {trigger : true});\n      element.preventDefault();\n    }\n});","var View = require('./view');\nvar NavCircle = require('./navCircle');\nvar NavTree = require('./navTree');\nmodule.exports = View.extend({\n\n\n    // The NavView listens for changes to its model, re-rendering.\n    afterInit: function afterInitNav(){\n     \n      this.listenTo(this.collection, 'viewTypeChanged', this.render);\n      this.listenTo(this.collection, 'dataChanged', this.render);\n\n    },\n    \n    // Re-renders the titles of the todo item.\n    render: function renderNav() {\n      this.$el.empty();\n      \n      if(this.collection.getViewType() === 1){\n        this.navView = new NavCircle({collection : this.collection}).preRender();\n      }else if(this.collection.getViewType() === 2){\n        this.navView = new NavTree({collection : this.collection}).preRender();\n      }\n\n    }\n\n});\n","var View = require('./view');\nvar application = require('../application');\nmodule.exports = View.extend({\n    events: {\n      'scroll': 'zoom',\n    },\n    changeScale: function zoomNav() {\n      //this.main.attr(\"transform\", \"translate(\" + d3.event.translate + \")scale(\" + d3.event.scale + \")\");\n    },\n    initSize: function initSizeNav() {\n      this.height = $(window).height() ;\n      this.width = $(window).width() ;\n      this.whiteRadius = 120;\n      this.yRadius = (this.height - 40) / 2;\n      this.xRadius = this.yRadius;\n      this.rotate = 0;\n      this.x = d3.scale.linear().range([0, this.width]),\n      this.y = d3.scale.linear().range([0, this.height]);\n      this.duration = 750;\n    },\n    resize: function resizeNav() {\n      this.initSize();\n      \n      this.cluster\n        .size([360, this.yRadius - this.whiteRadius]);\n\n      this.svg\n        .style(\"width\", this.width + \"px\")\n        .style(\"height\", this.height + \"px\");\n\n      this.vis\n        .attr(\"width\", this.width)\n        .attr(\"height\", this.height);\n\n      this.render();\n    },\n\n    // The NavView listens for changes to its model, re-rendering.\n    afterInit: function afterInitNav(){\n     \n      $(window).on(\"resize\", this.resize.bind(this));\n\n      this.listenTo(this.collection, 'conceptChanged', this.showSelectedNode);\n      this.listenTo(this.collection, 'navChanged', this.preRender);\n\n    },\n    \n    // Re-renders the titles of the todo item.\n    preRender: function preRenderNav() {\n      \n      if(this.collection.loaded){\n        \n        this.initSize();\n     \n      this.cluster = d3.layout.tree()\n        .separation(function(a, b) { return (a.parent == b.parent ? 1 : 2) / a.depth; });\n \n      //\n      this.diagonal = d3.svg.diagonal.radial()\n        .projection( function(d) { return [d.y, d.x / 180 * Math.PI]; } );\n      //\n      \n      this.svg = d3.select(\"#vizskos .nav\");\n      this.vis =  d3.select(\"#vizskos .nav svg\");\n      if(this.vis) this.vis.remove();\n\n      this.vis = this.svg.append(\"svg:svg\");\n      //\n      this.main = this.vis\n        .append(\"svg:g\")\n          .attr(\"class\", \"main \" + this.collection.activeThesaurus);\n      //partition view\n      this.partition = d3.layout.partition()\n        .value(function(d) { return d.size; });\n\n      this.zoom = d3.behavior.zoom()\n        .on(\"zoom\", this.changeScale.bind(this));\n\n\n        this.root = this.collection.conceptTree;\n        this.root.x0 = this.height / 2;\n        this.root.y0 = 0;\n          \n        this.arc = this.main.append(\"svg:path\")\n          .attr(\"class\", \"arc\");\n        \n        //console.log(this.conceptTree);\n        this.render(this.root);\n        this.resize();\n        this.showSelectedNode();\n      }\n \n    },\n    render : function renderNav(source) {\n      if(this.collection.loaded){\n        var nodes = this.cluster.nodes(this.collection.conceptTree);\n        var links = this.cluster.links(nodes);\n        var whiteRadius = this.whiteRadius;\n\n        this.main\n            .attr(\"transform\", \"translate(\" + (100 + this.xRadius ) + \",\" + (25 + this.yRadius) + \")\");\n\n        this.main.call(this.zoom);\n\n        var node = this.main.selectAll(\"g.node\").data(nodes);\n        var link = this.main.selectAll(\"path.link\").data(links);\n        \n        this.arc.attr(\"d\", d3.svg.arc().innerRadius(this.yRadius - this.whiteRadius).outerRadius(this.yRadius).startAngle(0).endAngle(2 * Math.PI));\n\n         var linkUpdate = link.transition()\n          .duration(this.duration)\n          .attr(\"d\", this.diagonal);\n\n        var linkEnter = link.enter()\n          .append(\"svg:path\")\n            .attr(\"class\", \"link\")\n            .attr(\"d\", this.diagonal);\n\n        var linkExit = link.exit().transition()\n          .duration(this.duration)\n          .attr(\"transform\", function(d,i) {return \"rotate(\" + (source.x - 90) + \")translate(\" + (source.y ) + \")\"; })\n          .remove();\n\n        var nodeEnter = node.enter()\n          .append(\"svg:g\")\n            .attr(\"class\", function(d) { return d.children ? \"node parent node_\" + d.id : \"node child node_\" + d.id; })\n            .attr(\"transform\", function(d,i) {return  \"rotate(\" + (source.x - 90) + \")translate(\" + (source.y ) + \")\"; });\n          \n        var nodeEnterCircle = nodeEnter.append(\"svg:circle\")\n          .attr(\"r\", 4,5)\n          .attr(\"class\", function(d) { return d._children ? \"children\" : \"\"; })\n          .on(\"mousedown\", this.toggleNode.bind(this) );\n\n        var nodeEnterLabel = nodeEnter.append(\"svg:text\")\n          .attr(\"dx\", function(d) { return d.x < 180 ? 8 : -8; })\n          .attr(\"dy\", \".31em\")\n          .attr(\"text-anchor\", function(d) { return d.x < 180 ? \"start\" : \"end\"; })\n          .attr(\"transform\", function(d) { return d.x < 180 ? null : \"rotate(180)\"; })\n          .text(function(d) { return d.name; })\n          .on(\"mousedown\", this.selectNode.bind(this) );\n\n        var nodeUpdate = node.transition()\n          .duration(this.duration)\n          .attr(\"transform\", function(d) { return \"rotate(\" + (d.x - 90) + \")translate(\" + (d.y ) + \")\"; });\n\n        nodeUpdate.select(\"circle\")\n          .attr(\"class\", function(d) { return d._children ? \"children\" : \"\"; });\n        \n\n        var nodeExit = node.exit()\n          .transition()\n            .duration(this.duration)\n            .attr(\"transform\", function(d) { return \"rotate(\" + (source.x - 90) + \")translate(\" + (source.y ) + \")\"; })\n            .remove();\n\n        nodeExit.select(\"circle\")\n          .attr(\"r\", 1e-6);\n\n        nodeExit.select(\"text\")\n          .style(\"fill-opacity\", 1e-6);\n\n        // Stash the old positions for transition.\n        node.forEach(function(d) {\n          d.x0 = d.x;\n          d.y0 = d.y;\n        });\n      }\n    },\n    toggleNode: function toggleNodeNav(d, i) {\n      \n      if (d.children) {\n        d._children = d.children;\n        d.children = null;              \n      } else {\n        d.children = d._children;\n        d._children = null;\n      }\n      this.render(d);\n      //console.log(d);\n    },\n    showSelectedNode: function showSelectedNodeNav(uri) {\n      //if(this.collection.loaded){\n        d3.select(\".node.selected\").classed(\"selected\", false);\n        var themodel = this.collection.getActiveConcept();\n        if(themodel) d3.select(\".node_\"+ themodel.attributes.id).classed(\"selected\", true);\n      //}\n    },\n    selectNode: function selectNodeNav(d, i) {\n      //console.log(\"on va voir\", application.processUri(d.id));\n      application.router.navigate(application.processUri(d.uri), {trigger : true});\n      //backbone being smart enough not to trigger the route if concept already selected\n      //we need to make sure the pop-up is open\n      if(this.collection.activeConceptId == d.uri) {\n        this.collection.toggleConcept(true);\n      }\n      d3.event.stopPropagation();\n    }\n\n});\n","var View = require('./view');\nvar application = require('../application');\nmodule.exports = View.extend({\n\n    initSize: function initSizeNav() {\n      this.height = $(window).height();\n      this.width = $(window).width() ;\n      this.i = 0;\n      this.duration = 750;\n    },\n\n    resize: function resizeNav() {\n      this.initSize();\n \n      this.svg\n        .style(\"width\", this.width + \"px\")\n        .style(\"height\", this.height + \"px\");\n\n      this.vis\n        .attr(\"width\", this.width)\n        .attr(\"height\", this.height);\n\n      this.render();\n    },\n\n    // The NavView listens for changes to its model, re-rendering.\n    afterInit: function afterInitNav(){\n\n      $(window).on(\"resize\", this.resize.bind(this));\n      this.listenTo(this.collection, 'conceptChanged', this.showSelectedNode);\n      this.listenTo(this.collection, 'navChanged', this.preRender);\n\n    },\n    \n    // Re-renders the titles of the todo item.\n    preRender: function preRenderNav() {\n  \n      if(this.collection.loaded){\n\n        this.initSize();\n       \n        this.tree = d3.layout.tree()\n          .size([this.height, this.width]);\n        //\n        this.diagonal = d3.svg.diagonal()\n          .projection( function(d) { return [d.y, d.x]; } );\n        //\n        this.svg = d3.select(\"nav.nav\");\n        //\n        this.vis = this.svg.append(\"svg:svg\");\n        //\n        this.main = this.vis\n          .append(\"svg:g\")\n            .attr(\"class\", \"main \" + this.collection.activeThesaurus);  \n\n        this.root = this.collection.conceptTree;\n        this.root.x0 = this.height / 2;\n        this.root.y0 = 0;\n        this.render(this.root);\n\n        this.resize();\n        this.showSelectedNode();\n      }\n \n    },\n    render : function renderNav(source) {\n\n      //if(this.collection.loaded){\n      // Compute the new tree layout.\n      var nodes = this.tree.nodes(this.root).reverse(),\n          links = this.tree.links(nodes);\n\n      // Normalize for fixed-depth.\n      nodes.forEach(function(d) { d.y = d.depth * 180; });\n\n      // Update the nodes…\n      var node = this.main.selectAll(\"g.node\")\n          .data(nodes, function(d) { return d.id || (d.id = ++this.i); });\n\n      // Enter any new nodes at the parent's previous position.\n      var nodeEnter = node.enter().append(\"g\")\n          .attr(\"class\", function(d){ return \"node node_\"+d.id; })\n          .attr(\"transform\", function(d) { return \"translate(\" + source.y0 + \",\" + source.x0 + \")\"; });\n\n      nodeEnter.append(\"circle\")\n          .attr(\"r\", 1e-6)\n          .attr(\"class\", function(d) { return d._children ? \"children\" : \"\"; })\n          .on(\"click\", this.toggleNode.bind(this));\n\n      nodeEnter.append(\"text\")\n          .attr(\"x\", function(d) { return d.children || d._children ? -10 : 10; })\n          .attr(\"dy\", \".35em\")\n          .attr(\"text-anchor\", function(d) { return d.children || d._children ? \"end\" : \"start\"; })\n          .text(function(d) { return d.name; })\n          .style(\"fill-opacity\", 1e-6)\n          .on(\"click\", this.selectNode.bind(this));\n\n      // Transition nodes to their new position.\n      var nodeUpdate = node.transition()\n          .duration(this.duration)\n          .attr(\"transform\", function(d) { return \"translate(\" + d.y + \",\" + d.x + \")\"; });\n\n      nodeUpdate.select(\"circle\")\n          .attr(\"r\", 4.5)\n          .attr(\"class\", function(d) { return d._children ? \"children\" : \"\"; });\n\n      nodeUpdate.select(\"text\")\n          .style(\"fill-opacity\", 1);\n\n      // Transition exiting nodes to the parent's new position.\n      var nodeExit = node.exit().transition()\n          .duration(this.duration)\n          .attr(\"transform\", function(d) { return \"translate(\" + source.y + \",\" + source.x + \")\"; })\n          .remove();\n\n      nodeExit.select(\"circle\")\n          .attr(\"r\", 1e-6);\n\n      nodeExit.select(\"text\")\n          .style(\"fill-opacity\", 1e-6);\n\n      // Update the links…\n      var link = this.main.selectAll(\"path.link\")\n          .data(links, function(d) { return d.target.id; });\n\n      var diagonal = this.diagonal;\n      // Enter any new links at the parent's previous position.\n      link.enter().insert(\"path\", \"g\")\n          .attr(\"class\", \"link\")\n          .attr(\"d\", function(d) {\n            var o = {x: source.x0, y: source.y0};\n            return diagonal({source: o, target: o});\n          });\n\n      // Transition links to their new position.\n      link.transition()\n          .duration(this.duration)\n          .attr(\"d\", diagonal);\n\n      // Transition exiting nodes to the parent's new position.\n      link.exit().transition()\n          .duration(this.duration)\n          .attr(\"d\", function(d) {\n            var o = {x: source.x, y: source.y};\n            return diagonal({source: o, target: o});\n          })\n          .remove();\n\n      // Stash the old positions for transition.\n      nodes.forEach(function(d) {\n        d.x0 = d.x;\n        d.y0 = d.y;\n      });\n      //}\n    },\n    toggleNode: function toggleNodeNav(d, i) {\n      //console.log(\"update\",d);\n      if (d.children) {\n        d._children = d.children;\n        d.children = null;              \n      } else {\n        d.children = d._children;\n        d._children = null;\n      }\n      this.render(d);\n      //console.log(d);\n    },\n    showSelectedNode: function showSelectedNodeNav(uri) {\n      //if(this.collection.loaded){\n        d3.select(\".node.selected\").classed(\"selected\", false);\n        var themodel = this.collection.getActiveConcept();\n        if(themodel) d3.select(\".node_\"+ themodel.attributes.id).classed(\"selected\", true);\n      //}\n    },\n    selectNode: function selectNodeNav(d, i) {\n      //\n      application.router.navigate(application.processUri(d.uri), {trigger : true});\n      //backbone being smart enough not to trigger the route if concept already selected\n      //we need to make sure the pop-up is open\n      if(this.collection.activeConceptId == d.uri) {\n        this.collection.toggleConcept(true);\n      }\n      d3.event.stopPropagation();\n    }\n\n});\n","var View = require('./view');\n\nmodule.exports = View.extend({\n    \n    template : require('./templates/selectNav.hbs'),\n    // The DOM events specific to a concept.\n    events: {\n      'change #selectNav': 'selectNav',\n    },\n    //\n    afterInit: function afterInitSelectNav(){\n      this.listenTo(this.collection, 'dataChanged', this.render);\n    },\n    //\n    getRenderData: function getRenderDataSelectNav(){\n      return{\n        viewTypes : this.collection.getViewTypes()\n      };\n    },\n    //  \n    selectNav: function selectNav(event) {\n      //console.log(\"SALUT\", Number($(event.target).val()));\n      \n      this.collection.setViewType(Number($(event.target).val()));\n    }\n\n});","var __templateData = Handlebars.template({\"1\":function(depth0,helpers,partials,data) {\n  return \"    <nav>\\n      <a class=\\\"prev\\\" href=\\\"/\\\"><</a>\\n      <a class=\\\"next\\\" href=\\\"/\\\">></a>      \\n    </nav>\\n\";\n  },\"3\":function(depth0,helpers,partials,data) {\n  var stack1, helperMissing=helpers.helperMissing, buffer = \"        <h1>\";\n  stack1 = ((helpers.label_with_language || (depth0 && depth0.label_with_language) || helperMissing).call(depth0, (depth0 != null ? depth0.prefLabel : depth0), (depth0 != null ? depth0.language : depth0), {\"name\":\"label_with_language\",\"hash\":{},\"data\":data}));\n  if (stack1 != null) { buffer += stack1; }\n  return buffer + \"</h1>\\n\";\n},\"5\":function(depth0,helpers,partials,data) {\n  var stack1, helperMissing=helpers.helperMissing, buffer = \"        <h2><code>skos:definition</code></h2>\\n        <p class=\\\"definition\\\">\";\n  stack1 = ((helpers.translation_label || (depth0 && depth0.translation_label) || helperMissing).call(depth0, (depth0 != null ? depth0['skos:definition'] : depth0), {\"name\":\"translation_label\",\"hash\":{},\"data\":data}));\n  if (stack1 != null) { buffer += stack1; }\n  return buffer + \"</p>\\n\";\n},\"7\":function(depth0,helpers,partials,data) {\n  var stack1, buffer = \"\";\n  stack1 = helpers['if'].call(depth0, \"prefLabel && concept\", {\"name\":\"if\",\"hash\":{},\"fn\":this.program(8, data),\"inverse\":this.noop,\"data\":data});\n  if (stack1 != null) { buffer += stack1; }\n  return buffer;\n},\"8\":function(depth0,helpers,partials,data) {\n  var stack1, buffer = \"        <h2><code>skos:prefLabel</code></h2>\\n        <ul>\\n\";\n  stack1 = helpers.each.call(depth0, (depth0 != null ? depth0.prefLabel : depth0), {\"name\":\"each\",\"hash\":{},\"fn\":this.program(9, data),\"inverse\":this.noop,\"data\":data});\n  if (stack1 != null) { buffer += stack1; }\n  return buffer + \"        </ul>\\n\";\n},\"9\":function(depth0,helpers,partials,data) {\n  var stack1, helperMissing=helpers.helperMissing, buffer = \"          <li>\";\n  stack1 = ((helpers.translation_label || (depth0 && depth0.translation_label) || helperMissing).call(depth0, depth0, {\"name\":\"translation_label\",\"hash\":{},\"data\":data}));\n  if (stack1 != null) { buffer += stack1; }\n  buffer += \" (\";\n  stack1 = ((helpers.translation_language || (depth0 && depth0.translation_language) || helperMissing).call(depth0, depth0, {\"name\":\"translation_language\",\"hash\":{},\"data\":data}));\n  if (stack1 != null) { buffer += stack1; }\n  return buffer + \")</li>\\n\";\n},\"11\":function(depth0,helpers,partials,data) {\n  var stack1, buffer = \"        <h2><code>skos:altLabel</code></h2>\\n        <ul>\\n\";\n  stack1 = helpers.each.call(depth0, (depth0 != null ? depth0.altLabel : depth0), {\"name\":\"each\",\"hash\":{},\"fn\":this.program(9, data),\"inverse\":this.noop,\"data\":data});\n  if (stack1 != null) { buffer += stack1; }\n  return buffer + \"        </ul>\\n\";\n},\"13\":function(depth0,helpers,partials,data) {\n  var stack1, buffer = \"        <h2><code>skos:hasTopConcept</code></h2>\\n        <ul>\\n\";\n  stack1 = helpers.each.call(depth0, (depth0 != null ? depth0.hasTopConcept : depth0), {\"name\":\"each\",\"hash\":{},\"fn\":this.program(14, data),\"inverse\":this.noop,\"data\":data});\n  if (stack1 != null) { buffer += stack1; }\n  return buffer + \"        </ul>\\n\";\n},\"14\":function(depth0,helpers,partials,data) {\n  var stack1, lambda=this.lambda, buffer = \"            <li><a href=\\\"\";\n  stack1 = lambda(depth0, depth0);\n  if (stack1 != null) { buffer += stack1; }\n  buffer += \"\\\" class=\\\"link\\\">\";\n  stack1 = lambda(depth0, depth0);\n  if (stack1 != null) { buffer += stack1; }\n  return buffer + \"</a></li>\\n\";\n},\"16\":function(depth0,helpers,partials,data) {\n  var stack1, buffer = \"        <h2><code>skos:broader</code></h2>\\n        <ul>\\n\";\n  stack1 = helpers.each.call(depth0, (depth0 != null ? depth0.parents : depth0), {\"name\":\"each\",\"hash\":{},\"fn\":this.program(17, data),\"inverse\":this.noop,\"data\":data});\n  if (stack1 != null) { buffer += stack1; }\n  return buffer + \"        </ul>\\n\";\n},\"17\":function(depth0,helpers,partials,data) {\n  var stack1, lambda=this.lambda, escapeExpression=this.escapeExpression, buffer = \"            <li class=\\\"parent_\"\n    + escapeExpression(lambda((data && data.index), depth0))\n    + \"\\\"><a href=\\\"\";\n  stack1 = lambda(depth0, depth0);\n  if (stack1 != null) { buffer += stack1; }\n  buffer += \"\\\" class=\\\"link\\\">\";\n  stack1 = lambda(depth0, depth0);\n  if (stack1 != null) { buffer += stack1; }\n  return buffer + \"</a></li>\\n\";\n},\"19\":function(depth0,helpers,partials,data) {\n  var stack1, buffer = \"        <h2>Children <code>skos:narrower</code></h2>\\n        <ul>\\n\";\n  stack1 = helpers.each.call(depth0, (depth0 != null ? depth0.narrower : depth0), {\"name\":\"each\",\"hash\":{},\"fn\":this.program(20, data),\"inverse\":this.noop,\"data\":data});\n  if (stack1 != null) { buffer += stack1; }\n  return buffer + \"        </ul>\\n\";\n},\"20\":function(depth0,helpers,partials,data) {\n  var stack1, lambda=this.lambda, buffer = \"          <li><a href=\\\"\";\n  stack1 = lambda(depth0, depth0);\n  if (stack1 != null) { buffer += stack1; }\n  buffer += \"\\\" class=\\\"link\\\">\";\n  stack1 = lambda(depth0, depth0);\n  if (stack1 != null) { buffer += stack1; }\n  return buffer + \"</a></li>\\n\";\n},\"22\":function(depth0,helpers,partials,data) {\n  var stack1, buffer = \"        <h2><code>skos:exactMatch</code></h2>\\n        <ul>\\n\";\n  stack1 = helpers.each.call(depth0, (depth0 != null ? depth0.exactMatch : depth0), {\"name\":\"each\",\"hash\":{},\"fn\":this.program(23, data),\"inverse\":this.noop,\"data\":data});\n  if (stack1 != null) { buffer += stack1; }\n  return buffer + \"        </ul>\\n\";\n},\"23\":function(depth0,helpers,partials,data) {\n  var stack1, lambda=this.lambda, helperMissing=helpers.helperMissing, buffer = \"        \t<li><a href=\\\"\";\n  stack1 = lambda(depth0, depth0);\n  if (stack1 != null) { buffer += stack1; }\n  buffer += \"\\\" \";\n  stack1 = ((helpers.is_internal_link || (depth0 && depth0.is_internal_link) || helperMissing).call(depth0, depth0, {\"name\":\"is_internal_link\",\"hash\":{},\"data\":data}));\n  if (stack1 != null) { buffer += stack1; }\n  buffer += \">\";\n  stack1 = lambda(depth0, depth0);\n  if (stack1 != null) { buffer += stack1; }\n  return buffer + \"</a></li>\\n\";\n},\"25\":function(depth0,helpers,partials,data) {\n  var stack1, buffer = \"        <h2><code>skos:closeMatch</code></h2>\\n        <ul>\\n\";\n  stack1 = helpers.each.call(depth0, (depth0 != null ? depth0.closeMatch : depth0), {\"name\":\"each\",\"hash\":{},\"fn\":this.program(23, data),\"inverse\":this.noop,\"data\":data});\n  if (stack1 != null) { buffer += stack1; }\n  return buffer + \"        </ul>\\n\";\n},\"compiler\":[6,\">= 2.0.0-beta.1\"],\"main\":function(depth0,helpers,partials,data) {\n  var stack1, helper, functionType=\"function\", helperMissing=helpers.helperMissing, buffer = \"<div class=\\\"concept \";\n  stack1 = ((helper = (helper = helpers.foldedClass || (depth0 != null ? depth0.foldedClass : depth0)) != null ? helper : helperMissing),(typeof helper === functionType ? helper.call(depth0, {\"name\":\"foldedClass\",\"hash\":{},\"data\":data}) : helper));\n  if (stack1 != null) { buffer += stack1; }\n  buffer += \"\\\">\\n  <header class=\\\"\";\n  stack1 = ((helper = (helper = helpers.conceptSchemeClass || (depth0 != null ? depth0.conceptSchemeClass : depth0)) != null ? helper : helperMissing),(typeof helper === functionType ? helper.call(depth0, {\"name\":\"conceptSchemeClass\",\"hash\":{},\"data\":data}) : helper));\n  if (stack1 != null) { buffer += stack1; }\n  buffer += \"\\\">\\n    <a class=\\\"close\\\" href=\\\"/\\\">X</a>\\n    <p class=\\\"context\\\"><a href=\\\"\";\n  stack1 = ((helper = (helper = helpers.conceptScheme || (depth0 != null ? depth0.conceptScheme : depth0)) != null ? helper : helperMissing),(typeof helper === functionType ? helper.call(depth0, {\"name\":\"conceptScheme\",\"hash\":{},\"data\":data}) : helper));\n  if (stack1 != null) { buffer += stack1; }\n  buffer += \"\\\" class=\\\"link\\\">\";\n  stack1 = ((helper = (helper = helpers.conceptScheme || (depth0 != null ? depth0.conceptScheme : depth0)) != null ? helper : helperMissing),(typeof helper === functionType ? helper.call(depth0, {\"name\":\"conceptScheme\",\"hash\":{},\"data\":data}) : helper));\n  if (stack1 != null) { buffer += stack1; }\n  buffer += \"</a></p>\\n  </header>\\n  <div class=\\\"body\\\">\\n\";\n  stack1 = helpers['if'].call(depth0, (depth0 != null ? depth0.concept : depth0), {\"name\":\"if\",\"hash\":{},\"fn\":this.program(1, data),\"inverse\":this.noop,\"data\":data});\n  if (stack1 != null) { buffer += stack1; }\n  buffer += \"    <hgroup>\\n      <code>\";\n  stack1 = ((helper = (helper = helpers.type || (depth0 != null ? depth0.type : depth0)) != null ? helper : helperMissing),(typeof helper === functionType ? helper.call(depth0, {\"name\":\"type\",\"hash\":{},\"data\":data}) : helper));\n  if (stack1 != null) { buffer += stack1; }\n  buffer += \"</code>\\n\";\n  stack1 = helpers['if'].call(depth0, (depth0 != null ? depth0.prefLabel : depth0), {\"name\":\"if\",\"hash\":{},\"fn\":this.program(3, data),\"inverse\":this.noop,\"data\":data});\n  if (stack1 != null) { buffer += stack1; }\n  buffer += \"      <p>\";\n  stack1 = ((helper = (helper = helpers.uri || (depth0 != null ? depth0.uri : depth0)) != null ? helper : helperMissing),(typeof helper === functionType ? helper.call(depth0, {\"name\":\"uri\",\"hash\":{},\"data\":data}) : helper));\n  if (stack1 != null) { buffer += stack1; }\n  buffer += \"</p>\\n\\n    </hgroup>\\n    <detail>\\n\\n\";\n  stack1 = helpers['if'].call(depth0, (depth0 != null ? depth0['skos:definition'] : depth0), {\"name\":\"if\",\"hash\":{},\"fn\":this.program(5, data),\"inverse\":this.noop,\"data\":data});\n  if (stack1 != null) { buffer += stack1; }\n  stack1 = helpers['if'].call(depth0, (depth0 != null ? depth0.concept : depth0), {\"name\":\"if\",\"hash\":{},\"fn\":this.program(7, data),\"inverse\":this.noop,\"data\":data});\n  if (stack1 != null) { buffer += stack1; }\n  stack1 = helpers['if'].call(depth0, (depth0 != null ? depth0.altLabel : depth0), {\"name\":\"if\",\"hash\":{},\"fn\":this.program(11, data),\"inverse\":this.noop,\"data\":data});\n  if (stack1 != null) { buffer += stack1; }\n  stack1 = helpers['if'].call(depth0, (depth0 != null ? depth0.hasTopConcept : depth0), {\"name\":\"if\",\"hash\":{},\"fn\":this.program(13, data),\"inverse\":this.noop,\"data\":data});\n  if (stack1 != null) { buffer += stack1; }\n  stack1 = helpers['if'].call(depth0, (depth0 != null ? depth0.parents : depth0), {\"name\":\"if\",\"hash\":{},\"fn\":this.program(16, data),\"inverse\":this.noop,\"data\":data});\n  if (stack1 != null) { buffer += stack1; }\n  stack1 = helpers['if'].call(depth0, (depth0 != null ? depth0.narrower : depth0), {\"name\":\"if\",\"hash\":{},\"fn\":this.program(19, data),\"inverse\":this.noop,\"data\":data});\n  if (stack1 != null) { buffer += stack1; }\n  stack1 = helpers['if'].call(depth0, (depth0 != null ? depth0.exactMatch : depth0), {\"name\":\"if\",\"hash\":{},\"fn\":this.program(22, data),\"inverse\":this.noop,\"data\":data});\n  if (stack1 != null) { buffer += stack1; }\n  stack1 = helpers['if'].call(depth0, (depth0 != null ? depth0.closeMatch : depth0), {\"name\":\"if\",\"hash\":{},\"fn\":this.program(25, data),\"inverse\":this.noop,\"data\":data});\n  if (stack1 != null) { buffer += stack1; }\n  return buffer + \"\\n    </detail>\\n  </div>\\n</div>\";\n},\"useData\":true});\nif (typeof define === 'function' && define.amd) {\n  define([], function() {\n    return __templateData;\n  });\n} else if (typeof module === 'object' && module && module.exports) {\n  module.exports = __templateData;\n} else {\n  __templateData;\n}","var Handlebars = require(\"hbsfy/runtime\");\nvar application = require(\"../../application\");\n\nHandlebars.registerHelper('label_with_language', function(labels, language) {\n\t//if a language is specified \n\n\tif(language) {\n\t\tvar filteredLabels = labels.filter(function(element){\n\t\t\treturn element[\"@language\"] === language;\n\t\t})\n\t\tif(filteredLabels[0]) return filteredLabels[0][\"@value\"];\n\t}\n\t\n\t//otherwise get \"pivot\" element, the only one which is a string \n\t\n\tvar filteredLabels = labels.filter(function(element){\n\t\treturn typeof element === \"string\";\n\t})\n\treturn filteredLabels[0];\n\t\n\treturn \"\";\n});\n\nHandlebars.registerHelper('translation_language', function(labelObject) {\n\tif (!labelObject) return; \n\tif (typeof labelObject  === \"string\") return \"pivot\";\n\treturn labelObject[\"@language\"];\n});\n\nHandlebars.registerHelper('translation_label', function(labelObject) {\n\tif (!labelObject) return; \n\tif (typeof labelObject  === \"string\") return labelObject;\n\treturn labelObject[\"@value\"];\n});\n\nHandlebars.registerHelper('properties_list', function(property) {\n  \tif(Array.isArray(property)) return property;\n  \treturn [property];\n});\n\nHandlebars.registerHelper('process_uri', function(uri) {\n\tif(!uri) return;\n\treturn application.processUri(uri);\n});\n\nHandlebars.registerHelper('is_internal_link', function(uri) {\n\tif(!uri) return;\n  \tif(application.collection.matchAnyThesaurus(uri)){\n  \t\treturn \" class='link'\";\n  \t}else{\n  \t\treturn \" target='_blank'\";\n  \t}\n});","var __templateData = Handlebars.template({\"compiler\":[6,\">= 2.0.0-beta.1\"],\"main\":function(depth0,helpers,partials,data) {\n  return \"\\n<main class=\\\"main\\\">\\n  <header><a href=\\\"/InstrumentsKeywords/\\\"><img src=\\\"/images/logos/mimo.png\\\" alt=\\\"MIMO - Musical Instruments Museums Online\\\" /></a>\\n  \t<nav class=\\\"tools\\\"></nav>\\n  </header>\\n  <nav class=\\\"nav\\\">\\n    \\n  </nav>\\n  <article></article>\\n</main>\\n<footer></footer>\\n\";\n  },\"useData\":true});\nif (typeof define === 'function' && define.amd) {\n  define([], function() {\n    return __templateData;\n  });\n} else if (typeof module === 'object' && module && module.exports) {\n  module.exports = __templateData;\n} else {\n  __templateData;\n}","var __templateData = Handlebars.template({\"1\":function(depth0,helpers,partials,data) {\n  var stack1, helper, functionType=\"function\", helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression, buffer = \"  \t\t<option value=\\\"\"\n    + escapeExpression(((helper = (helper = helpers.id || (depth0 != null ? depth0.id : depth0)) != null ? helper : helperMissing),(typeof helper === functionType ? helper.call(depth0, {\"name\":\"id\",\"hash\":{},\"data\":data}) : helper)))\n    + \"\\\" \";\n  stack1 = helpers['if'].call(depth0, (depth0 != null ? depth0.selected : depth0), {\"name\":\"if\",\"hash\":{},\"fn\":this.program(2, data),\"inverse\":this.noop,\"data\":data});\n  if (stack1 != null) { buffer += stack1; }\n  return buffer + \" >\"\n    + escapeExpression(((helper = (helper = helpers.name || (depth0 != null ? depth0.name : depth0)) != null ? helper : helperMissing),(typeof helper === functionType ? helper.call(depth0, {\"name\":\"name\",\"hash\":{},\"data\":data}) : helper)))\n    + \"</option>\\n\";\n},\"2\":function(depth0,helpers,partials,data) {\n  return \" selected=\\\"selected\\\" \";\n  },\"compiler\":[6,\">= 2.0.0-beta.1\"],\"main\":function(depth0,helpers,partials,data) {\n  var stack1, buffer = \"<!--<ul class=\\\"schemes\\\">\\n\";\n  stack1 = helpers.each.call(depth0, (depth0 != null ? depth0.thesaurusNames : depth0), {\"name\":\"each\",\"hash\":{},\"fn\":this.program(1, data),\"inverse\":this.noop,\"data\":data});\n  if (stack1 != null) { buffer += stack1; }\n  buffer += \"</ul>-->\\n<form>\\n\t<select id=\\\"selectNav\\\" name=\\\"selectNav\\\">\\n\";\n  stack1 = helpers.each.call(depth0, (depth0 != null ? depth0.viewTypes : depth0), {\"name\":\"each\",\"hash\":{},\"fn\":this.program(1, data),\"inverse\":this.noop,\"data\":data});\n  if (stack1 != null) { buffer += stack1; }\n  return buffer + \"\t</select>\\n\t<!--<input name=\\\"search\\\" id=\\\"search\\\" placeholder=\\\"Rechercher\\\" />-->\\n</form>\";\n},\"useData\":true});\nif (typeof define === 'function' && define.amd) {\n  define([], function() {\n    return __templateData;\n  });\n} else if (typeof module === 'object' && module && module.exports) {\n  module.exports = __templateData;\n} else {\n  __templateData;\n}","var _ = require('underscore');\nvar helpers = require('./templates/helpers');\n\nmodule.exports = Backbone.View.extend({\n  initialize: function initializeView() {\n    _.bindAll(this, 'template', 'getRenderData', 'render', 'afterRender');\n    this.afterInit();\n  },\n  afterInit: function afterInitView() {},\n  template: function templateView() {},\n  getRenderData: function getRenderDataView() {},\n\n  render: function renderView() {\n    this.$el.empty();\n    this.$el.html(this.template(this.getRenderData()));\n    _.defer(this.afterRender); //setTimeOut(0)\n  },\n\n  afterRender: function afterRenderView() {}\n});"]}